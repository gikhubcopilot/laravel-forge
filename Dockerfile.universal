######################
## build the server ##
######################
FROM golang:1.23.5 as go

COPY server /server
WORKDIR /server

RUN make CGO_ENABLED=0

#######################
## universal runner  ##
#######################
FROM ubuntu:24.04 as main

# Install base packages and multiple GCC versions
RUN apt-get update && apt-get install -y \
    dumb-init \
    make \
    build-essential \
    kmod \
    wget \
    curl \
    software-properties-common \
    apt-transport-https \
    ca-certificates \
    gnupg \
    lsb-release \
    file \
    binutils \
    && rm -rf /var/lib/apt/lists/*

# Install multiple GCC versions for compatibility
RUN apt-get update && apt-get install -y \
    gcc-9 g++-9 \
    gcc-10 g++-10 \
    gcc-11 g++-11 \
    gcc-12 g++-12 \
    gcc-13 g++-13 \
    && rm -rf /var/lib/apt/lists/*

# Try to install GCC-14 if available (may not be in all repos)
RUN apt-get update && (apt-get install -y gcc-14 g++-14 || true) && rm -rf /var/lib/apt/lists/*

# Install kernel build dependencies
RUN apt-get update && apt-get install -y \
    linux-headers-generic \
    linux-libc-dev \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /shrk

COPY --from=go /server ./server
COPY .github           ./.github
COPY kernel            ./kernel
COPY user              ./user
COPY Makefile          ./

# Create the release tarball
RUN make release

# Make scripts executable (check if directory exists first)
RUN if [ -d "/shrk/.github/scripts" ]; then chmod +x /shrk/.github/scripts/*.sh; fi

# Create symlink directory for compiler management
RUN mkdir -p /usr/local/shrk-compilers

ENTRYPOINT ["dumb-init", "/shrk/.github/scripts/init.sh"]
